<style>
.reveal pre code {
    font-size: 1em;
}
</style>

StockTrends Shiny App
========================================================
author: Jan Koscialkowski
date: 2 August 2017
autosize: true


Overview
========================================================

The application was developed as a final assignment for the Developing Data Products course on Coursera. It loads the `EuStockMarkets` dataset from the `datasets` package and then creates a graph of the stock indices prices. The user is allowed to modify the following:

- What time interval to show?
- Which indices to show (DAX, SMI, CAC, FTSE)?
- Whether to fit linear trends to the data currently shown?

Technically the application consists of `ui.R` and `server.R` files which are accompanied by this presentation generated by the `Presentation.Rpres` file. All files have been pushed to a GitHub repository and can be found [here](https://github.com/jkoscialkowski/StockTrendsApp).

The application itself is hosted at <https://jkoscialkowski.shinyapps.io/StockTrends/>.



server.R contents
========================================================

```{r, eval=FALSE}
library(shiny)
library(ggplot2)
library(tidyr)
library(dplyr)

shinyServer(function(input, output) {
    dataLogical <- reactive({(1:4)[c(input$DAX, input$SMI, input$CAC, input$FTSE)]})
    data <- reactive({as.data.frame(EuStockMarkets) %>% 
                        select(dataLogical()) %>%
                        gather(index, price) %>%
                        mutate(time = rep(time(EuStockMarkets), length(dataLogical())))})    
    output$plot <- renderPlot({
        min <- time(EuStockMarkets)[input$timeInterval[1]]
        max <- time(EuStockMarkets)[input$timeInterval[2]]
        g <- ggplot(data = data(), mapping = aes(x = time, y = price, colour = index)) +
            geom_line() +
            xlim(min, max) +
            xlab("Time") +
            ylab("Index price")
        
        if(input$fit == 1) {
            g <- g + geom_smooth(method = "lm", se = FALSE)
        }
        g
    })
})
```

A sample graph produced by the application
========================================================

```{r, echo=FALSE, message=FALSE, fig.height=10, fig.width=14}
library(ggplot2)
library(dplyr)
library(tidyr)

data <- as.data.frame(EuStockMarkets) %>% 
        filter(c(rep(FALSE, 1099), rep(TRUE,761))) %>%
        gather(index,price) %>%
        mutate(time = rep(time(EuStockMarkets[1100:1860, ]), 4))

g <- ggplot(data = data, mapping = aes(x = time, y = price, colour = index)) +
        geom_line() +
        xlab("Time") +
        ylab("Index price") +
        geom_smooth(method = "lm", se = FALSE) +
        theme(title = element_text(size = 16))
g
```


Thank you for viewing!
========================================================

Be sure to see the application online: <https://jkoscialkowski.shinyapps.io/StockTrends/>.